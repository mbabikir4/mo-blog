declare type Headers = {
    [key: string]: any;
};
declare type RequestOptions = {
    method: string;
    url: string;
    headers?: Headers;
    body: Document | BodyInit | null | undefined;
};
declare type BeforeRequestProps = {
    xhr: XMLHttpRequest;
    files: FileList;
};
declare type BeforeRequest = (props: BeforeRequestProps) => Promise<RequestOptions | undefined> | RequestOptions | undefined;
declare type UploadProps = {
    files: FileList;
};
declare type UseUploadState<Response> = {
    loading: boolean;
    done: boolean;
    data?: Response;
    error?: ProgressEvent;
    xhr?: XMLHttpRequest;
    responseHeaders?: Headers;
    progress?: number;
};
declare type UseUploadResults<Response> = [
    (props: UploadProps) => void,
    UseUploadState<Response>
];
export declare const useUpload: <Response_1 = any>(beforeRequest: BeforeRequest) => UseUploadResults<Response_1>;
export {};
