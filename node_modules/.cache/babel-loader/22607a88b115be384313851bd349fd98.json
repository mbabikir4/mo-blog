{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\components\\\\BlogEditor.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { Controller } from \"react-hook-form\";\nimport { getToken } from \"../functions/token\";\nimport { getUser } from \"../functions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogEditor = props => {\n  const user = JSON.parse(getUser());\n  const config = {\n    uploader: {\n      url: 'http://localhost:8000/api/upload/',\n      headers: {\n        Authorization: getToken()\n      },\n      data: {\n        username: user.pk\n      },\n      process: function (resp) {\n        return {\n          file: resp[this.options.uploader.filesVariableName] || [],\n          path: resp.path,\n          baseurl: resp.baseurl,\n          error: resp.error,\n          msg: resp.msg\n        };\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"innerText\",\n      control: props.control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(JoditEditor, {\n        config: config,\n        ...field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BlogEditor;\nexport default BlogEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogEditor\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/components/BlogEditor.jsx"],"names":["React","useState","useRef","JoditEditor","Editor","Controller","getToken","getUser","BlogEditor","props","user","JSON","parse","config","uploader","url","headers","Authorization","data","username","pk","process","resp","file","options","filesVariableName","path","baseurl","error","msg","control","field"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,qEAAP;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,EAAlB,CAAb;AAEF,QAAMM,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,GAAG,EAAE,mCADC;AAENC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEX,QAAQ;AAAxB,OAFH;AAGNY,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAET,IAAI,CAACU;AAAhB,OAHA;AAINC,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AAErB,eAAO;AACHC,UAAAA,IAAI,EAAED,IAAI,CAAC,KAAKE,OAAL,CAAaV,QAAb,CAAsBW,iBAAvB,CAAJ,IAAiD,EADpD;AAEHC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFR;AAGHC,UAAAA,OAAO,EAAEL,IAAI,CAACK,OAHX;AAIHC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAJT;AAKHC,UAAAA,GAAG,EAAEP,IAAI,CAACO;AALP,SAAP;AAOH;AAbK;AADG,GAAf;AAoBA,sBACE;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,OAAO,EAAEpB,KAAK,CAACqB,OAFjB;AAGE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACN,QAAC,WAAD;AACA,QAAA,MAAM,EAAElB,MADR;AAAA,WAEMkB;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;;KAAMvB,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { getToken } from \"../functions/token\";\r\nimport { getUser } from \"../functions/user\";\r\n\r\nconst BlogEditor = (props) => {\r\n    const user = JSON.parse(getUser());\r\n\r\n  const config = {\r\n    uploader: {\r\n        url: 'http://localhost:8000/api/upload/',\r\n        headers: {Authorization: getToken(),},\r\n        data: {username: user.pk },\r\n        process: function (resp) {\r\n            \r\n            return {\r\n                file: resp[this.options.uploader.filesVariableName] || [],\r\n                path: resp.path,\r\n                baseurl: resp.baseurl,\r\n                error: resp.error,\r\n                msg: resp.msg\r\n            };\r\n        },\r\n\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Controller\r\n        name=\"innerText\"\r\n        control={props.control}\r\n        render={({ field }) => (\r\n          <JoditEditor\r\n          config={config}\r\n            {...field}\r\n\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogEditor;\r\n"]},"metadata":{},"sourceType":"module"}