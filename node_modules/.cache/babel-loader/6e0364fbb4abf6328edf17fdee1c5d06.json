{"ast":null,"code":"import _isEqualWith from 'lodash-es/isEqualWith';\n\nvar customizer = function customizer(objectValue, otherValue, indexOrkey, object, other, stack) {\n  // https://lodash.com/docs/4.17.4#isEqualWith\n  if (stack) {\n    // Shallow compares\n    // For 1st level, stack === undefined.\n    //   -> Do nothing (and implicitly return undefined so that it goes to compare 2nd level)\n    // For 2nd level and up, stack !== undefined.\n    //   -> Compare by === operator\n    return objectValue === otherValue;\n  }\n};\n\nvar shallowCompare = function shallowCompare(instance, nextProps, nextState) {\n  return !_isEqualWith(instance.props, nextProps, customizer) || !_isEqualWith(instance.state, nextState, customizer);\n};\n\nexport default shallowCompare;","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/node_modules/admin-on-rest/node_modules/redux-form/es/util/shallowCompare.js"],"names":["_isEqualWith","customizer","objectValue","otherValue","indexOrkey","object","other","stack","shallowCompare","instance","nextProps","nextState","props","state"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;;AAGA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiEC,KAAjE,EAAwEC,KAAxE,EAA+E;AAC9F;AACA,MAAIA,KAAJ,EAAW;AACT;AACA;AACA;AACA;AACA;AACA,WAAOL,WAAW,KAAKC,UAAvB;AACD;AACF,CAVD;;AAYA,IAAIK,cAAc,GAAG,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,SAA7C,EAAwD;AAC3E,SAAO,CAACX,YAAY,CAACS,QAAQ,CAACG,KAAV,EAAiBF,SAAjB,EAA4BT,UAA5B,CAAb,IAAwD,CAACD,YAAY,CAACS,QAAQ,CAACI,KAAV,EAAiBF,SAAjB,EAA4BV,UAA5B,CAA5E;AACD,CAFD;;AAIA,eAAeO,cAAf","sourcesContent":["import _isEqualWith from 'lodash-es/isEqualWith';\n\n\nvar customizer = function customizer(objectValue, otherValue, indexOrkey, object, other, stack) {\n  // https://lodash.com/docs/4.17.4#isEqualWith\n  if (stack) {\n    // Shallow compares\n    // For 1st level, stack === undefined.\n    //   -> Do nothing (and implicitly return undefined so that it goes to compare 2nd level)\n    // For 2nd level and up, stack !== undefined.\n    //   -> Compare by === operator\n    return objectValue === otherValue;\n  }\n};\n\nvar shallowCompare = function shallowCompare(instance, nextProps, nextState) {\n  return !_isEqualWith(instance.props, nextProps, customizer) || !_isEqualWith(instance.state, nextState, customizer);\n};\n\nexport default shallowCompare;"]},"metadata":{},"sourceType":"module"}