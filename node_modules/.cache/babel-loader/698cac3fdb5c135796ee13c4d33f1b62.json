{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\admin\\\\app.jsx\";\nimport React from 'react';\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\nimport DjangoRestClient from \"aor-django-rest-framework\";\nimport { tokenAuthProvider, fetchJsonWithAuthToken } from 'ra-data-django-rest-framework';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authProvider = tokenAuthProvider({\n  obtainAuthTokenUrl: 'http://localhost:8000/api/rest-auth/login/',\n  Headers: {\n    Authorization: 'Token ' + localStorage.getItem('token')\n  }\n});\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Token ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = DjangoRestClient('http://localhost:8000/api', httpClient);\n\nconst App = () => {\n  console.log(dataProvider);\n  document.querySelector('title').innerText = 'Admin';\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    authProvider: authProvider,\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      name: \"blogs\",\n      list: ListGuesser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"data\",\n      list: ListGuesser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/admin/app.jsx"],"names":["React","Admin","Resource","ListGuesser","fetchUtils","DjangoRestClient","tokenAuthProvider","fetchJsonWithAuthToken","authProvider","obtainAuthTokenUrl","Headers","Authorization","localStorage","getItem","httpClient","url","options","headers","Accept","token","set","fetchJson","dataProvider","App","console","log","document","querySelector","innerText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,UAAvC,QAAyD,aAAzD;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAAUC,iBAAV,EAA6BC,sBAA7B,QAA2D,+BAA3D;;AACA,MAAMC,YAAY,GAAGF,iBAAiB,CAAC;AACnCG,EAAAA,kBAAkB,EAAE,4CADe;AAEnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAE,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADrB;AAF0B,CAAD,CAAtC;;AAQA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,KAAuB;AACtC,MAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;AAClBD,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAIP,OAAJ,CAAY;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACH;;AACD,QAAMC,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAG,EAAAA,OAAO,CAACC,OAAR,CAAgBG,GAAhB,CAAoB,eAApB,EAAsC,SAAQD,KAAM,EAApD;AACA,SAAOf,UAAU,CAACiB,SAAX,CAAqBN,GAArB,EAA0BC,OAA1B,CAAP;AACH,CAPD;;AASA,MAAMM,YAAY,GAAEjB,gBAAgB,CAAC,2BAAD,EAA8BS,UAA9B,CAApC;;AAEA,MAAMS,GAAG,GAAG,MAAM;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACAI,EAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,GAA4C,OAA5C;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,YAAY,EAAEN,YAArB;AAAmC,IAAA,YAAY,EAAEd,YAAjD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,IAAI,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;KAAMoB,G;AAYN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\r\nimport DjangoRestClient from \"aor-django-rest-framework\";\r\nimport  { tokenAuthProvider, fetchJsonWithAuthToken } from 'ra-data-django-rest-framework';\r\nconst authProvider = tokenAuthProvider({\r\n    obtainAuthTokenUrl: 'http://localhost:8000/api/rest-auth/login/',\r\n    Headers: {\r\n        Authorization: 'Token ' + localStorage.getItem('token')\r\n\r\n    }\r\n})\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const token = localStorage.getItem('token');\r\n    options.headers.set('Authorization', `Token ${token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n}\r\n\r\nconst dataProvider= DjangoRestClient('http://localhost:8000/api', httpClient)\r\n\r\nconst App = () => {\r\n    console.log(dataProvider)\r\n    document.querySelector('title').innerText = 'Admin'\r\n    return ( \r\n        <Admin dataProvider={dataProvider} authProvider={authProvider}>\r\n            <Resource name=\"blogs\" list={ListGuesser}></Resource>\r\n            <Resource name=\"data\" list={ListGuesser}></Resource>\r\n            \r\n        </Admin>\r\n     );\r\n}\r\n \r\nexport default App;"]},"metadata":{},"sourceType":"module"}