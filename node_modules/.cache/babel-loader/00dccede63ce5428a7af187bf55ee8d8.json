{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\screens\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport Field from '../components/FieldForm';\nimport { post } from 'axios';\nimport { useMutation, useQuery } from 'react-query';\nimport { setToken, isAuthenticated } from '../functions/token';\nimport { fetchUser } from '../functions/api';\nimport { setUser } from '../functions/user';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const loggedIn = isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }, this) : '';\n  const {\n    control,\n    handleSubmit\n  } = useForm();\n  const userData = useQuery('user', fetchUser, {\n    enabled: false\n  });\n  const mutationToken = useMutation(data => post('http://localhost:8000/api/rest-auth/login/', data));\n\n  const onSubmit = data => {\n    mutationToken.mutate(data);\n\n    if (mutationToken.isSuccess) {\n      const token = mutationToken.data.data.key;\n      setToken(`Token ${token}`);\n      setTimeout(userData.refetch(), 6000);\n\n      if (userData.isSuccess) {\n        setUser(JSON.stringify(userData.data));\n      }\n\n      ;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        control: control,\n        label: \"username\",\n        placeholder: \"username\",\n        type: \"text\",\n        required: true,\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        control: control,\n        label: \"password\",\n        type: \"password\",\n        required: true,\n        placeholder: \"*******\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleSubmit(onSubmit),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"4+nKrqJbiw+e5ndAKbrqvGZ+ufg=\", false, function () {\n  return [useForm, useQuery, useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/screens/LoginForm.jsx"],"names":["React","Container","useForm","Field","post","useMutation","useQuery","setToken","isAuthenticated","fetchUser","setUser","Redirect","LoginForm","loggedIn","control","handleSubmit","userData","enabled","mutationToken","data","onSubmit","mutate","isSuccess","token","key","setTimeout","refetch","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,IAAR,QAAmB,OAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAMC,QAAQ,GAAGL,eAAe,kBAAK,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAL,GAA2B,EAA3D;AACA,QAAM;AAACM,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA2Bb,OAAO,EAAxC;AACA,QAAMc,QAAQ,GAAGV,QAAQ,CAAC,MAAD,EAASG,SAAT,EAAoB;AAACQ,IAAAA,OAAO,EAAE;AAAV,GAApB,CAAzB;AACA,QAAMC,aAAa,GAAGb,WAAW,CAACc,IAAI,IAAIf,IAAI,CAAC,4CAAD,EAA8Ce,IAA9C,CAAb,CAAjC;;AACA,QAAMC,QAAQ,GAAID,IAAD,IAAU;AACvBD,IAAAA,aAAa,CAACG,MAAd,CAAqBF,IAArB;;AACA,QAAGD,aAAa,CAACI,SAAjB,EAA4B;AACxB,YAAMC,KAAK,GAAGL,aAAa,CAACC,IAAd,CAAmBA,IAAnB,CAAwBK,GAAtC;AACAjB,MAAAA,QAAQ,CAAE,SAAQgB,KAAM,EAAhB,CAAR;AACAE,MAAAA,UAAU,CAACT,QAAQ,CAACU,OAAT,EAAD,EAAqB,IAArB,CAAV;;AAEA,UAAGV,QAAQ,CAACM,SAAZ,EAAuB;AACnBZ,QAAAA,OAAO,CAACiB,IAAI,CAACC,SAAL,CAAeZ,QAAQ,CAACG,IAAxB,CAAD,CAAP;AACH;;AAAA;AAEJ;AACJ,GAZD;;AAcA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEL,OAAhB;AAAyB,QAAA,KAAK,EAAC,UAA/B;AAA0C,QAAA,WAAW,EAAC,UAAtD;AAAiE,QAAA,IAAI,EAAC,MAAtE;AAA6E,QAAA,QAAQ,MAArF;AAAsF,QAAA,IAAI,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,OAAhB;AAAyB,QAAA,KAAK,EAAC,UAA/B;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,QAAQ,MAAlE;AAAmE,QAAA,WAAW,EAAC,SAA/E;AAAyF,QAAA,IAAI,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAEC,YAAY,CAACK,QAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BD;;GAAMR,S;UAG+BV,O,EAChBI,Q,EACKD,W;;;KALpBO,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport Field from '../components/FieldForm';\r\nimport {post} from 'axios';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { setToken, isAuthenticated } from '../functions/token';\r\nimport {fetchUser} from '../functions/api'\r\nimport { setUser } from '../functions/user';\r\nimport { Redirect } from 'react-router';\r\nconst LoginForm = () => {\r\n\r\n    const loggedIn = isAuthenticated() ? <Redirect to=\"/\" /> : '';\r\n    const {control, handleSubmit}  = useForm();\r\n    const userData = useQuery('user', fetchUser, {enabled: false})\r\n    const mutationToken = useMutation(data => post('http://localhost:8000/api/rest-auth/login/',data));\r\n    const onSubmit = (data) => {\r\n        mutationToken.mutate(data);\r\n        if(mutationToken.isSuccess) {\r\n            const token = mutationToken.data.data.key\r\n            setToken(`Token ${token}`)\r\n            setTimeout(userData.refetch(), 6000);\r\n            \r\n            if(userData.isSuccess) {\r\n                setUser(JSON.stringify(userData.data))\r\n            };\r\n\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <div>\r\n                <Field control={control} label=\"username\" placeholder=\"username\" type=\"text\" required name=\"username\" />\r\n                <Field control={control} label=\"password\" type=\"password\" required placeholder=\"*******\" name=\"password\"  />\r\n                <div className=\"d-grid gap-2\">\r\n                    <button className=\"btn btn-secondary\" onClick={handleSubmit(onSubmit)}>Login</button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n      );\r\n}\r\n \r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}