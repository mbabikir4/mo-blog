{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\admin\\\\app.jsx\";\nimport React from 'react';\nimport { Admin, Resource, ListGuesser, AUTH_LOGIN, fetchUtils } from 'react-admin';\nimport DjangoRestClient from \"aor-django-rest-framework\";\nimport { tokenAuthProvider, fetchJsonWithAuthToken } from 'ra-data-django-rest-framework';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authProvider = tokenAuthProvider({\n  obtainAuthTokenUrl: 'http://localhost:8000/api/rest-auth/login/'\n});\n\nconst authProvide = (type, params) => {\n  if (type === AUTH_LOGIN) {\n    const {\n      username,\n      password\n    } = params;\n    const request = new Request('http://localhost:8000/api/rest-auth/login/', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(({\n      token\n    }) => {\n      localStorage.setItem('token', token);\n    });\n  }\n\n  return Promise.resolve();\n};\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const token = JSON.parse(localStorage.getItem('token'));\n  options.headers.set('Authorization', `Token ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = DjangoRestClient('http://localhost:8000/api', httpClient);\n\nconst App = () => {\n  console.log(dataProvider);\n  document.querySelector('title').innerText = 'Admin';\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    authProvider: authProvide,\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      name: \"blogs\",\n      list: ListGuesser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"data\",\n      list: ListGuesser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/admin/app.jsx"],"names":["React","Admin","Resource","ListGuesser","AUTH_LOGIN","fetchUtils","DjangoRestClient","tokenAuthProvider","fetchJsonWithAuthToken","authProvider","obtainAuthTokenUrl","authProvide","type","params","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","localStorage","setItem","Promise","resolve","httpClient","url","options","Accept","parse","getItem","set","fetchJson","dataProvider","App","console","log","document","querySelector","innerText"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Admin, Resource, ListGuesser,  AUTH_LOGIN, fetchUtils  } from 'react-admin';\r\nimport DjangoRestClient from \"aor-django-rest-framework\";\r\nimport  { tokenAuthProvider, fetchJsonWithAuthToken } from 'ra-data-django-rest-framework';\r\nconst authProvider = tokenAuthProvider({\r\n    obtainAuthTokenUrl: 'http://localhost:8000/api/rest-auth/login/',\r\n    \r\n})\r\n\r\nconst authProvide = (type, params) => {\r\n    if (type === AUTH_LOGIN) {\r\n        const { username, password } = params;\r\n        const request = new Request('http://localhost:8000/api/rest-auth/login/', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        })\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token }) => {\r\n                localStorage.setItem('token', token);\r\n            });\r\n    }\r\n    return Promise.resolve();\r\n}\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const token  = JSON.parse(localStorage.getItem('token'));\r\n    options.headers.set('Authorization', `Token ${token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst dataProvider= DjangoRestClient('http://localhost:8000/api', httpClient)\r\n\r\nconst App = () => {\r\n    console.log(dataProvider)\r\n    document.querySelector('title').innerText = 'Admin'\r\n    return ( \r\n        <Admin dataProvider={dataProvider} authProvider={authProvide}>\r\n            <Resource name=\"blogs\" list={ListGuesser}></Resource>\r\n            <Resource name=\"data\" list={ListGuesser}></Resource>\r\n            \r\n        </Admin>\r\n     );\r\n}\r\n \r\nexport default App;"]},"metadata":{},"sourceType":"module"}