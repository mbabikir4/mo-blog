{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport createConnectedFields from './ConnectedFields';\nimport shallowCompare from './util/shallowCompare';\nimport plain from './structure/plain';\nimport prefixName from './util/prefixName';\n\nvar validateNameProp = function validateNameProp(prop) {\n  if (!prop) {\n    return new Error('No \"names\" prop was specified <Fields/>');\n  }\n\n  if (!Array.isArray(prop) && !prop._isFieldArray) {\n    return new Error('Invalid prop \"names\" supplied to <Fields/>. Must be either an array of strings or the fields array generated by FieldArray.');\n  }\n};\n\nvar createFields = function createFields(structure) {\n  var ConnectedFields = createConnectedFields(structure);\n\n  var Fields = function (_Component) {\n    _inherits(Fields, _Component);\n\n    function Fields(props, context) {\n      _classCallCheck(this, Fields);\n\n      var _this = _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, props, context));\n\n      if (!context._reduxForm) {\n        throw new Error('Fields must be inside a component decorated with reduxForm()');\n      }\n\n      return _this;\n    }\n\n    _createClass(Fields, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        return shallowCompare(this, nextProps);\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        var error = validateNameProp(this.props.names);\n\n        if (error) {\n          throw error;\n        }\n\n        var context = this.context;\n        var register = context._reduxForm.register;\n        this.names.forEach(function (name) {\n          return register(name, 'Field');\n        });\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (!plain.deepEqual(this.props.names, nextProps.names)) {\n          var context = this.context;\n          var _context$_reduxForm = context._reduxForm,\n              register = _context$_reduxForm.register,\n              unregister = _context$_reduxForm.unregister; // unregister old name\n\n          this.props.names.forEach(function (name) {\n            return unregister(prefixName(context, name));\n          }); // register new name\n\n          nextProps.names.forEach(function (name) {\n            return register(prefixName(context, name), 'Field');\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var context = this.context;\n        var unregister = context._reduxForm.unregister;\n        this.props.names.forEach(function (name) {\n          return unregister(prefixName(context, name));\n        });\n      }\n    }, {\n      key: 'getRenderedComponent',\n      value: function getRenderedComponent() {\n        invariant(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Fields');\n        return this.refs.connected.getWrappedInstance().getRenderedComponent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var context = this.context;\n        return createElement(ConnectedFields, _extends({}, this.props, {\n          names: this.props.names.map(function (name) {\n            return prefixName(context, name);\n          }),\n          _reduxForm: this.context._reduxForm,\n          ref: 'connected'\n        }));\n      }\n    }, {\n      key: 'names',\n      get: function get() {\n        var context = this.context;\n        return this.props.names.map(function (name) {\n          return prefixName(context, name);\n        });\n      }\n    }, {\n      key: 'dirty',\n      get: function get() {\n        return this.refs.connected.getWrappedInstance().isDirty();\n      }\n    }, {\n      key: 'pristine',\n      get: function get() {\n        return !this.dirty;\n      }\n    }, {\n      key: 'values',\n      get: function get() {\n        return this.refs.connected && this.refs.connected.getWrappedInstance().getValues();\n      }\n    }]);\n\n    return Fields;\n  }(Component);\n\n  Fields.propTypes = {\n    names: function names(props, propName) {\n      return validateNameProp(props[propName]);\n    },\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n    format: PropTypes.func,\n    parse: PropTypes.func,\n    props: PropTypes.object,\n    withRef: PropTypes.bool\n  };\n  Fields.contextTypes = {\n    _reduxForm: PropTypes.object\n  };\n  return Fields;\n};\n\nexport default createFields;","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/node_modules/admin-on-rest/node_modules/redux-form/es/createFields.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","Component","createElement","PropTypes","invariant","createConnectedFields","shallowCompare","plain","prefixName","validateNameProp","prop","Error","Array","isArray","_isFieldArray","createFields","structure","ConnectedFields","Fields","_Component","context","_this","getPrototypeOf","_reduxForm","shouldComponentUpdate","nextProps","componentWillMount","error","names","register","forEach","name","componentWillReceiveProps","deepEqual","_context$_reduxForm","unregister","componentWillUnmount","getRenderedComponent","withRef","refs","connected","getWrappedInstance","render","map","ref","get","isDirty","dirty","getValues","propTypes","propName","component","oneOfType","func","string","isRequired","format","parse","object","bool","contextTypes"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport createConnectedFields from './ConnectedFields';\nimport shallowCompare from './util/shallowCompare';\nimport plain from './structure/plain';\nimport prefixName from './util/prefixName';\n\n\nvar validateNameProp = function validateNameProp(prop) {\n  if (!prop) {\n    return new Error('No \"names\" prop was specified <Fields/>');\n  }\n  if (!Array.isArray(prop) && !prop._isFieldArray) {\n    return new Error('Invalid prop \"names\" supplied to <Fields/>. Must be either an array of strings or the fields array generated by FieldArray.');\n  }\n};\n\nvar createFields = function createFields(structure) {\n  var ConnectedFields = createConnectedFields(structure);\n\n  var Fields = function (_Component) {\n    _inherits(Fields, _Component);\n\n    function Fields(props, context) {\n      _classCallCheck(this, Fields);\n\n      var _this = _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, props, context));\n\n      if (!context._reduxForm) {\n        throw new Error('Fields must be inside a component decorated with reduxForm()');\n      }\n      return _this;\n    }\n\n    _createClass(Fields, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        return shallowCompare(this, nextProps);\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        var error = validateNameProp(this.props.names);\n        if (error) {\n          throw error;\n        }\n        var context = this.context;\n        var register = context._reduxForm.register;\n\n        this.names.forEach(function (name) {\n          return register(name, 'Field');\n        });\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (!plain.deepEqual(this.props.names, nextProps.names)) {\n          var context = this.context;\n          var _context$_reduxForm = context._reduxForm,\n              register = _context$_reduxForm.register,\n              unregister = _context$_reduxForm.unregister;\n          // unregister old name\n\n          this.props.names.forEach(function (name) {\n            return unregister(prefixName(context, name));\n          });\n          // register new name\n          nextProps.names.forEach(function (name) {\n            return register(prefixName(context, name), 'Field');\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var context = this.context;\n        var unregister = context._reduxForm.unregister;\n\n        this.props.names.forEach(function (name) {\n          return unregister(prefixName(context, name));\n        });\n      }\n    }, {\n      key: 'getRenderedComponent',\n      value: function getRenderedComponent() {\n        invariant(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Fields');\n        return this.refs.connected.getWrappedInstance().getRenderedComponent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var context = this.context;\n\n        return createElement(ConnectedFields, _extends({}, this.props, {\n          names: this.props.names.map(function (name) {\n            return prefixName(context, name);\n          }),\n          _reduxForm: this.context._reduxForm,\n          ref: 'connected'\n        }));\n      }\n    }, {\n      key: 'names',\n      get: function get() {\n        var context = this.context;\n\n        return this.props.names.map(function (name) {\n          return prefixName(context, name);\n        });\n      }\n    }, {\n      key: 'dirty',\n      get: function get() {\n        return this.refs.connected.getWrappedInstance().isDirty();\n      }\n    }, {\n      key: 'pristine',\n      get: function get() {\n        return !this.dirty;\n      }\n    }, {\n      key: 'values',\n      get: function get() {\n        return this.refs.connected && this.refs.connected.getWrappedInstance().getValues();\n      }\n    }]);\n\n    return Fields;\n  }(Component);\n\n  Fields.propTypes = {\n    names: function names(props, propName) {\n      return validateNameProp(props[propName]);\n    },\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n    format: PropTypes.func,\n    parse: PropTypes.func,\n    props: PropTypes.object,\n    withRef: PropTypes.bool\n  };\n  Fields.contextTypes = {\n    _reduxForm: PropTypes.object\n  };\n\n  return Fields;\n};\n\nexport default createFields;"]},"metadata":{},"sourceType":"module"}