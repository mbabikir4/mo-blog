{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\screens\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport Field from '../components/FieldForm';\nimport { setToken, isAuthenticated } from '../functions/token';\nimport { fetchAll } from '../functions/api';\nimport { setUser } from '../functions/user';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  // const isAuth  =  () => {\n  //     if(sessionStorage.getItem('user') && sessionStorage.getItem('token')) {\n  //         return true;\n  //     }\n  // else {\n  //     return false;\n  // }\n  // }\n  // const isAuthR = isAuth()\n  // console.log(isAuthR)\n  // const isAuthIs = isAuthR ? <Redirect to=\"\"></Redirect> : <div></div>;\n  const {\n    control,\n    handleSubmit\n  } = useForm();\n\n  const set = (token, user) => {\n    setToken(token);\n    setUser(JSON.stringify(user));\n  };\n\n  const onSubmit = data => {\n    fetchAll(data).then(({\n      token,\n      user\n    }) => {\n      set(token, user);\n    }).then();\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        control: control,\n        label: \"username\",\n        placeholder: \"username\",\n        type: \"text\",\n        required: true,\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        control: control,\n        label: \"password\",\n        type: \"password\",\n        required: true,\n        placeholder: \"*******\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleSubmit(onSubmit),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"H/T3946MXHpWkjDcnY+P1Ch9tQQ=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/screens/LoginForm.jsx"],"names":["React","Container","useForm","Field","setToken","isAuthenticated","fetchAll","setUser","Redirect","LoginForm","control","handleSubmit","set","token","user","JSON","stringify","onSubmit","data","then","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA2BT,OAAO,EAAxC;;AACA,QAAMU,GAAG,GAAG,CAACC,KAAD,EAAOC,IAAP,KAAgB;AAACV,IAAAA,QAAQ,CAACS,KAAD,CAAR;AAAiBN,IAAAA,OAAO,CAACQ,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAD,CAAP;AAA8B,GAA5E;;AACA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACvBZ,IAAAA,QAAQ,CAACY,IAAD,CAAR,CAAeC,IAAf,CAAoB,CAAC;AAACN,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAD,KAAkB;AAACF,MAAAA,GAAG,CAACC,KAAD,EAAOC,IAAP,CAAH;AAAgB,KAAvD,EAAyDK,IAAzD;AAAiE,GADrE;;AAGI,MAAIC,UAAJ,EAAgB;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACR,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEV,OAAhB;AAAyB,QAAA,KAAK,EAAC,UAA/B;AAA0C,QAAA,WAAW,EAAC,UAAtD;AAAiE,QAAA,IAAI,EAAC,MAAtE;AAA6E,QAAA,QAAQ,MAArF;AAAsF,QAAA,IAAI,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,OAAhB;AAAyB,QAAA,KAAK,EAAC,UAA/B;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,QAAQ,MAAlE;AAAmE,QAAA,WAAW,EAAC,SAA/E;AAAyF,QAAA,IAAI,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAEC,YAAY,CAACM,QAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYF,CAtCF;;GAAMR,S;UAkB+BP,O;;;KAlB/BO,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport Field from '../components/FieldForm';\r\nimport { setToken, isAuthenticated } from '../functions/token';\r\nimport {fetchAll} from '../functions/api'\r\nimport { setUser } from '../functions/user';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst LoginForm = () => {\r\n\r\n    // const isAuth  =  () => {\r\n    //     if(sessionStorage.getItem('user') && sessionStorage.getItem('token')) {\r\n    //         return true;\r\n\r\n    //     }\r\n    // else {\r\n    //     return false;\r\n    // }\r\n    // }\r\n        \r\n\r\n    // const isAuthR = isAuth()\r\n   \r\n    // console.log(isAuthR)\r\n    // const isAuthIs = isAuthR ? <Redirect to=\"\"></Redirect> : <div></div>;\r\n\r\n    const {control, handleSubmit}  = useForm();\r\n    const set = (token,user) => {setToken(token); setUser(JSON.stringify(user))}\r\n    const onSubmit = (data) => {\r\n        fetchAll(data).then(({token,user}) => {set(token,user)}).then() }\r\n\r\n        if (isLoggedIn) {\r\n            return <Redirect to='/' />\r\n           }\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <Field control={control} label=\"username\" placeholder=\"username\" type=\"text\" required name=\"username\" />\r\n                <Field control={control} label=\"password\" type=\"password\" required placeholder=\"*******\" name=\"password\"  />\r\n                <div className=\"d-grid gap-2\">\r\n                    <button className=\"btn btn-secondary\" onClick={handleSubmit(onSubmit)}>Login</button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n\r\n      );\r\n }\r\n \r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}