{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\functions\\\\token.js\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getToken = () => {\n  const token = sessionStorage.getItem('token');\n  return token;\n};\nexport const isAuthenticated = () => {\n  const token = sessionStorage.getItem('token');\n  const user = sessionStorage.getItem('user');\n  const isAuthenticated = token && user ? true : false;\n  return isAuthenticated;\n};\nexport const setToken = token => {\n  sessionStorage.setItem('token', token);\n};\nexport const deleteToken = () => {\n  sessionStorage.removeItem('token');\n};\nexport const RedirectToAuth = isAuthenticated() ? '' : /*#__PURE__*/_jsxDEV(Redirect, {\n  to: \"/login\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 56\n}, this);","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/functions/token.js"],"names":["Redirect","getToken","token","sessionStorage","getItem","isAuthenticated","user","setToken","setItem","deleteToken","removeItem","RedirectToAuth"],"mappings":";AAAA,SAASA,QAAT,QAAwB,cAAxB;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,SAAOF,KAAP;AAEH,CAJM;AAMP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACjC,QAAMH,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,QAAME,IAAI,GAAGH,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAb;AACA,QAAMC,eAAe,GAAGH,KAAK,IAAII,IAAT,GAAgB,IAAhB,GAAuB,KAA/C;AAEA,SAAOD,eAAP;AACH,CANM;AAQP,OAAO,MAAME,QAAQ,GAAIL,KAAD,IAAW;AAC/BC,EAAAA,cAAc,CAACK,OAAf,CAAuB,OAAvB,EAAgCN,KAAhC;AACH,CAFM;AAIP,OAAO,MAAMO,WAAW,GAAG,MAAM;AAC7BN,EAAAA,cAAc,CAACO,UAAf,CAA0B,OAA1B;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAGN,eAAe,KAAK,EAAL,gBAAU,QAAC,QAAD;AAAU,EAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,QAAhD","sourcesContent":["import { Redirect} from \"react-router\";\r\nexport const getToken = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    return token\r\n\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    const user = sessionStorage.getItem('user');\r\n    const isAuthenticated = token && user ? true : false;\r\n\r\n    return isAuthenticated\r\n}\r\n\r\nexport const setToken = (token) => {\r\n    sessionStorage.setItem('token', token)\r\n}\r\n\r\nexport const deleteToken = () => {\r\n    sessionStorage.removeItem('token')\r\n}\r\n\r\nexport const RedirectToAuth = isAuthenticated() ? '' : <Redirect to=\"/login\" />"]},"metadata":{},"sourceType":"module"}