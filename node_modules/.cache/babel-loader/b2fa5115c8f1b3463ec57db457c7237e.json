{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m2bab\\\\VM\\\\rd2\\\\frontend\\\\src\\\\components\\\\BlogEditor.jsx\";\nimport React from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { Controller } from \"react-hook-form\";\nimport { getToken } from \"../functions/token\";\nimport { getUser } from \"../functions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogEditor = props => {\n  const user = JSON.parse(getUser());\n  const config = {\n    uploader: {\n      filesVariableName: 'files',\n      url: 'http://localhost:8000/api/upload/jodit/',\n      headers: {\n        Authorization: getToken()\n      },\n      data: {\n        username: user.pk\n      },\n      process: function (resp) {\n        console.log(resp);\n        return {\n          files: resp.files,\n          path: resp.path,\n          baseurl: 'http://localhost:8000',\n          error: resp.error\n        };\n      },\n      defaultHandlerSuccess: function (data, resp) {\n        var i,\n            field = this.options.uploader.filesVariableName;\n\n        if (data[field] && data[field].length) {\n          for (i = 0; i < data[field].length; i += 1) {\n            this.selection.insertImage('http://localhost:8000' + data[field][i]);\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"innerText\",\n      control: props.control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(JoditEditor, {\n        config: config,\n        ...field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BlogEditor;\nexport default BlogEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogEditor\");","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/components/BlogEditor.jsx"],"names":["React","JoditEditor","Controller","getToken","getUser","BlogEditor","props","user","JSON","parse","config","uploader","filesVariableName","url","headers","Authorization","data","username","pk","process","resp","console","log","files","path","baseurl","error","defaultHandlerSuccess","i","field","options","length","selection","insertImage","control"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,qEAAP;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,EAAlB,CAAb;AAEF,QAAMM,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE;AACPC,MAAAA,iBAAiB,EAAE,OADZ;AAENC,MAAAA,GAAG,EAAE,yCAFC;AAGNC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEZ,QAAQ;AAAxB,OAHH;AAINa,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAEV,IAAI,CAACW;AAAhB,OAJA;AAKNC,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAO;AACHG,UAAAA,KAAK,EAAEH,IAAI,CAACG,KADT;AAEHC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFR;AAGHC,UAAAA,OAAO,EAAE,uBAHN;AAIHC,UAAAA,KAAK,EAAEN,IAAI,CAACM;AAJT,SAAP;AAMH,OAbK;AAcNC,MAAAA,qBAAqB,EAAE,UAAUX,IAAV,EAAgBI,IAAhB,EAAsB;AAC3C,YAAIQ,CAAJ;AAAA,YAAOC,KAAK,GAAG,KAAKC,OAAL,CAAanB,QAAb,CAAsBC,iBAArC;;AACA,YAAII,IAAI,CAACa,KAAD,CAAJ,IAAeb,IAAI,CAACa,KAAD,CAAJ,CAAYE,MAA/B,EAAuC;AACnC,eAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGZ,IAAI,CAACa,KAAD,CAAJ,CAAYE,MAA5B,EAAoCH,CAAC,IAAI,CAAzC,EAA4C;AACxC,iBAAKI,SAAL,CAAeC,WAAf,CAA2B,0BAA0BjB,IAAI,CAACa,KAAD,CAAJ,CAAYD,CAAZ,CAArD;AACH;AACJ;AACJ;AArBO;AADG,GAAf;AA4BA,sBACE;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,OAAO,EAAEtB,KAAK,CAAC4B,OAFjB;AAGE,MAAA,MAAM,EAAE,CAAC;AAAEL,QAAAA;AAAF,OAAD,kBACN,QAAC,WAAD;AACA,QAAA,MAAM,EAAEnB,MADR;AAAA,WAEMmB;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9CD;;KAAMxB,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { getToken } from \"../functions/token\";\r\nimport { getUser } from \"../functions/user\";\r\n\r\nconst BlogEditor = (props) => {\r\n    const user = JSON.parse(getUser());\r\n\r\n  const config = {\r\n    uploader: {\r\n       filesVariableName: 'files',\r\n        url: 'http://localhost:8000/api/upload/jodit/',\r\n        headers: {Authorization: getToken(),},\r\n        data: {username: user.pk },\r\n        process: function (resp) {\r\n            console.log(resp)\r\n            return {\r\n                files: resp.files,\r\n                path: resp.path,\r\n                baseurl: 'http://localhost:8000',\r\n                error: resp.error,\r\n            };\r\n        },\r\n        defaultHandlerSuccess: function (data, resp) {\r\n          var i, field = this.options.uploader.filesVariableName;\r\n          if (data[field] && data[field].length) {\r\n              for (i = 0; i < data[field].length; i += 1) {\r\n                  this.selection.insertImage('http://localhost:8000' + data[field][i]);\r\n              }\r\n          }\r\n      },\r\n\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Controller\r\n        name=\"innerText\"\r\n        control={props.control}\r\n        render={({ field }) => (\r\n          <JoditEditor\r\n          config={config}\r\n            {...field}\r\n\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogEditor;\r\n"]},"metadata":{},"sourceType":"module"}