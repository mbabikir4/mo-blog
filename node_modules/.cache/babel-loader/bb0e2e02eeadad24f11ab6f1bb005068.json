{"ast":null,"code":"import axios, { get, post } from 'axios';\nimport { getToken } from './token';\nconst authHeader = {\n  headers: {\n    Authorization: `${getToken()}`,\n    'Content-Type': 'multipart/form-data'\n  }\n};\nexport const fetchAll = async form => {\n  const tokenRes = await post('http://localhost:8000/api/rest-auth/login/', form);\n  const {\n    token\n  } = await tokenRes.data;\n  const userRes = await get('http://localhost:8000/api/rest-auth/user/', {\n    headers: {\n      Authorization: `Token ${token}`\n    }\n  });\n  const user = await userRes.data;\n  return {\n    token: `Token ${token}`,\n    user\n  };\n};\nexport const fetchBlogs = async () => {\n  const blogsRes = await get('http://localhost:8000/api/blogs', {\n    headers: {\n      Authorization: `${getToken()}`\n    }\n  });\n  const blogsData = await blogsRes.data;\n  return {\n    blogsData\n  };\n};\nexport const fetchBlogPost = async id => {\n  const res = await get(`http://localhost:8000/api/blogs/${id}`, {\n    headers: {\n      Authorization: getToken()\n    }\n  });\n  const data = await res.data;\n  return data;\n}; // export const PostBlog = async (dataArg) => {\n//     const formData = await new formData();\n//     await formData.append('image_new',dataArg.image_new[0])\n//     await formData.append('username',dataArg.username)\n//     const image = await post('http://localhost:8000/api/upload/',formData, authHeader)\n//     const {image_new} = await image.data\n//     const newData = await {...dataArg, image_new: image_new};\n//     const BlogUpload = await post('http://localhost:8000/api/blogs/',newData,{headers: {Authorization: getToken()}})\n//     const data = await BlogUpload.data\n//     return data;\n// }","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/src/functions/api.jsx"],"names":["axios","get","post","getToken","authHeader","headers","Authorization","fetchAll","form","tokenRes","token","data","userRes","user","fetchBlogs","blogsRes","blogsData","fetchBlogPost","id","res"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,GAAf,EAAmBC,IAAnB,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,SAAzB;AAGA,MAAMC,UAAU,GAAG;AAACC,EAAAA,OAAO,EAAE;AACzBC,IAAAA,aAAa,EAAG,GAAEH,QAAQ,EAAG,EADJ;AAEzB,oBAAgB;AAFS;AAAV,CAAnB;AAOA,OAAO,MAAMI,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AACpC,QAAMC,QAAQ,GAAG,MAAMP,IAAI,CAAC,4CAAD,EAA+CM,IAA/C,CAA3B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAU,MAAMD,QAAQ,CAACE,IAA/B;AACA,QAAMC,OAAO,GAAG,MAAMX,GAAG,CAAC,2CAAD,EAA8C;AACnEI,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,SAAQI,KAAM;AADzB;AAD0D,GAA9C,CAAzB;AAKA,QAAMG,IAAI,GAAG,MAAMD,OAAO,CAACD,IAA3B;AACA,SAAO;AACHD,IAAAA,KAAK,EAAG,SAAQA,KAAM,EADnB;AAEHG,IAAAA;AAFG,GAAP;AAMH,CAfM;AAiBP,OAAO,MAAMC,UAAU,GAAI,YAAY;AACnC,QAAMC,QAAQ,GAAE,MAAOd,GAAG,CAAC,iCAAD,EAAoC;AAC1DI,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,GAAEH,QAAQ,EAAG;AADxB;AADiD,GAApC,CAA1B;AAOA,QAAMa,SAAS,GAAG,MAAMD,QAAQ,CAACJ,IAAjC;AACA,SAAO;AAACK,IAAAA;AAAD,GAAP;AAEH,CAXM;AAaP,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAP,IAAc;AACvC,QAAMC,GAAG,GAAG,MAAMlB,GAAG,CAAE,mCAAkCiB,EAAG,EAAvC,EAA0C;AAACb,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEH,QAAQ;AAAxB;AAAV,GAA1C,CAArB;AACA,QAAMQ,IAAI,GAAG,MAAMQ,GAAG,CAACR,IAAvB;AACA,SAAOA,IAAP;AAEH,CALM,C,CAOP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios, {get,post} from 'axios';\r\nimport { getToken } from './token';\r\n\r\n\r\nconst authHeader = {headers: {\r\n    Authorization: `${getToken()}`,\r\n    'Content-Type': 'multipart/form-data'\r\n\r\n\r\n}};\r\n\r\nexport const fetchAll = async (form) => {\r\n    const tokenRes = await post('http://localhost:8000/api/rest-auth/login/', form);\r\n    const {token} = await tokenRes.data;\r\n    const userRes = await get('http://localhost:8000/api/rest-auth/user/', {\r\n        headers: {\r\n            Authorization: `Token ${token}`,\r\n        }\r\n    });\r\n    const user = await userRes.data;\r\n    return {\r\n        token: `Token ${token}`,\r\n        user,\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const fetchBlogs =  async () => {\r\n    const blogsRes =await  get('http://localhost:8000/api/blogs', {\r\n        headers: {\r\n            Authorization: `${getToken()}`,\r\n\r\n        }\r\n    });\r\n\r\n    const blogsData = await blogsRes.data\r\n    return {blogsData};\r\n\r\n}\r\n\r\nexport const fetchBlogPost = async (id) => {\r\n    const res = await get(`http://localhost:8000/api/blogs/${id}`, {headers: {Authorization: getToken()}});\r\n    const data = await res.data\r\n    return data;\r\n\r\n}\r\n\r\n// export const PostBlog = async (dataArg) => {\r\n//     const formData = await new formData();\r\n//     await formData.append('image_new',dataArg.image_new[0])\r\n//     await formData.append('username',dataArg.username)\r\n\r\n//     const image = await post('http://localhost:8000/api/upload/',formData, authHeader)\r\n//     const {image_new} = await image.data\r\n//     const newData = await {...dataArg, image_new: image_new};\r\n//     const BlogUpload = await post('http://localhost:8000/api/blogs/',newData,{headers: {Authorization: getToken()}})\r\n//     const data = await BlogUpload.data\r\n//     return data;\r\n\r\n// } "]},"metadata":{},"sourceType":"module"}