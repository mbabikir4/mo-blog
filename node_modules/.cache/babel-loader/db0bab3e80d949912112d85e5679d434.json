{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _effects = require('redux-saga/effects');\n\nvar _fetchActions = require('../../actions/fetchActions');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar crudFetch = function crudFetch(restClient) {\n  var _marked = /*#__PURE__*/_regenerator2.default.mark(handleFetch);\n\n  function handleFetch(action) {\n    var type, payload, _action$meta, fetchMeta, meta, restType, response;\n\n    return _regenerator2.default.wrap(function handleFetch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = action.type, payload = action.payload, _action$meta = action.meta, fetchMeta = _action$meta.fetch, meta = (0, _objectWithoutProperties3.default)(_action$meta, ['fetch']);\n            restType = fetchMeta;\n            _context.next = 4;\n            return (0, _effects.all)([(0, _effects.put)({\n              type: type + '_LOADING',\n              payload: payload,\n              meta: meta\n            }), (0, _effects.put)({\n              type: _fetchActions.FETCH_START\n            })]);\n\n          case 4:\n            response = void 0;\n            _context.prev = 5;\n            _context.next = 8;\n            return (0, _effects.call)(restClient, restType, meta.resource, payload);\n\n          case 8:\n            response = _context.sent;\n\n            if (response.data) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error('REST response must contain a data key');\n\n          case 11:\n            _context.next = 13;\n            return (0, _effects.put)({\n              type: type + '_SUCCESS',\n              payload: response,\n              requestPayload: payload,\n              meta: (0, _extends3.default)({}, meta, {\n                fetchResponse: restType,\n                fetchStatus: _fetchActions.FETCH_END\n              })\n            });\n\n          case 13:\n            _context.next = 15;\n            return (0, _effects.put)({\n              type: _fetchActions.FETCH_END\n            });\n\n          case 15:\n            _context.next = 23;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context['catch'](5);\n            _context.next = 21;\n            return (0, _effects.put)({\n              type: type + '_FAILURE',\n              error: _context.t0.message ? _context.t0.message : _context.t0,\n              payload: _context.t0.body ? _context.t0.body : null,\n              requestPayload: payload,\n              meta: (0, _extends3.default)({}, meta, {\n                fetchResponse: restType,\n                fetchStatus: _fetchActions.FETCH_ERROR\n              })\n            });\n\n          case 21:\n            _context.next = 23;\n            return (0, _effects.put)({\n              type: _fetchActions.FETCH_ERROR,\n              error: _context.t0\n            });\n\n          case 23:\n            _context.prev = 23;\n            _context.next = 26;\n            return (0, _effects.cancelled)();\n\n          case 26:\n            if (!_context.sent) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 29;\n            return (0, _effects.put)({\n              type: _fetchActions.FETCH_CANCEL\n            });\n\n          case 29:\n            return _context.abrupt('return');\n\n          case 30:\n            return _context.finish(23);\n\n          case 31:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _marked, this, [[5, 17, 23, 31]]);\n  }\n\n  return /*#__PURE__*/_regenerator2.default.mark(function watchCrudFetch() {\n    return _regenerator2.default.wrap(function watchCrudFetch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _effects.all)([(0, _effects.takeLatest)(function (action) {\n              return action.meta && action.meta.fetch && action.meta.cancelPrevious;\n            }, handleFetch), (0, _effects.takeEvery)(function (action) {\n              return action.meta && action.meta.fetch && !action.meta.cancelPrevious;\n            }, handleFetch)]);\n\n          case 2:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, watchCrudFetch, this);\n  });\n};\n\nexports.default = crudFetch;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Users/m2bab/VM/rd2/frontend/node_modules/admin-on-rest/lib/sideEffect/saga/crudFetch.js"],"names":["Object","defineProperty","exports","value","_regenerator","require","_regenerator2","_interopRequireDefault","_extends2","_extends3","_objectWithoutProperties2","_objectWithoutProperties3","_effects","_fetchActions","obj","__esModule","default","crudFetch","restClient","_marked","mark","handleFetch","action","type","payload","_action$meta","fetchMeta","meta","restType","response","wrap","handleFetch$","_context","prev","next","fetch","all","put","FETCH_START","call","resource","sent","data","Error","requestPayload","fetchResponse","fetchStatus","FETCH_END","t0","error","message","body","FETCH_ERROR","cancelled","FETCH_CANCEL","abrupt","finish","stop","watchCrudFetch","watchCrudFetch$","_context2","takeLatest","cancelPrevious","takeEvery","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _effects = require('redux-saga/effects');\n\nvar _fetchActions = require('../../actions/fetchActions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar crudFetch = function crudFetch(restClient) {\n    var _marked = /*#__PURE__*/_regenerator2.default.mark(handleFetch);\n\n    function handleFetch(action) {\n        var type, payload, _action$meta, fetchMeta, meta, restType, response;\n\n        return _regenerator2.default.wrap(function handleFetch$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        type = action.type, payload = action.payload, _action$meta = action.meta, fetchMeta = _action$meta.fetch, meta = (0, _objectWithoutProperties3.default)(_action$meta, ['fetch']);\n                        restType = fetchMeta;\n                        _context.next = 4;\n                        return (0, _effects.all)([(0, _effects.put)({ type: type + '_LOADING', payload: payload, meta: meta }), (0, _effects.put)({ type: _fetchActions.FETCH_START })]);\n\n                    case 4:\n                        response = void 0;\n                        _context.prev = 5;\n                        _context.next = 8;\n                        return (0, _effects.call)(restClient, restType, meta.resource, payload);\n\n                    case 8:\n                        response = _context.sent;\n\n                        if (response.data) {\n                            _context.next = 11;\n                            break;\n                        }\n\n                        throw new Error('REST response must contain a data key');\n\n                    case 11:\n                        _context.next = 13;\n                        return (0, _effects.put)({\n                            type: type + '_SUCCESS',\n                            payload: response,\n                            requestPayload: payload,\n                            meta: (0, _extends3.default)({}, meta, {\n                                fetchResponse: restType,\n                                fetchStatus: _fetchActions.FETCH_END\n                            })\n                        });\n\n                    case 13:\n                        _context.next = 15;\n                        return (0, _effects.put)({ type: _fetchActions.FETCH_END });\n\n                    case 15:\n                        _context.next = 23;\n                        break;\n\n                    case 17:\n                        _context.prev = 17;\n                        _context.t0 = _context['catch'](5);\n                        _context.next = 21;\n                        return (0, _effects.put)({\n                            type: type + '_FAILURE',\n                            error: _context.t0.message ? _context.t0.message : _context.t0,\n                            payload: _context.t0.body ? _context.t0.body : null,\n                            requestPayload: payload,\n                            meta: (0, _extends3.default)({}, meta, {\n                                fetchResponse: restType,\n                                fetchStatus: _fetchActions.FETCH_ERROR\n                            })\n                        });\n\n                    case 21:\n                        _context.next = 23;\n                        return (0, _effects.put)({ type: _fetchActions.FETCH_ERROR, error: _context.t0 });\n\n                    case 23:\n                        _context.prev = 23;\n                        _context.next = 26;\n                        return (0, _effects.cancelled)();\n\n                    case 26:\n                        if (!_context.sent) {\n                            _context.next = 30;\n                            break;\n                        }\n\n                        _context.next = 29;\n                        return (0, _effects.put)({ type: _fetchActions.FETCH_CANCEL });\n\n                    case 29:\n                        return _context.abrupt('return');\n\n                    case 30:\n                        return _context.finish(23);\n\n                    case 31:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _marked, this, [[5, 17, 23, 31]]);\n    }\n\n    return (/*#__PURE__*/_regenerator2.default.mark(function watchCrudFetch() {\n            return _regenerator2.default.wrap(function watchCrudFetch$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            _context2.next = 2;\n                            return (0, _effects.all)([(0, _effects.takeLatest)(function (action) {\n                                return action.meta && action.meta.fetch && action.meta.cancelPrevious;\n                            }, handleFetch), (0, _effects.takeEvery)(function (action) {\n                                return action.meta && action.meta.fetch && !action.meta.cancelPrevious;\n                            }, handleFetch)]);\n\n                        case 2:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, watchCrudFetch, this);\n        })\n    );\n};\n\nexports.default = crudFetch;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}